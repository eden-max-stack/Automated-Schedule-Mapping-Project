from flask import Flask, render_template, request, url_for, flash, redirect #for webforms
from datetime import date, datetime #for conversion of date read from html into iso format
import mysql.connector #for storing data collected in sql db
import main #importing functions from other python file(s)
import os
from werkzeug.utils import secure_filename
import signal
from werkzeug.serving import make_server

app = Flask(__name__)

#sql connection
app.config['MYSQL_USER'] = 'root' #set to 'root' if using default
app.config['MYSQL_HOST'] = 'localhost' #set to 'localhost' if using default
app.config['MYSQL_DB'] = 'gcapdb' #create a db using MySQL and change it to db's name
app.config['MYSQL_PASSWORD'] = '' #the password to user in MySQL

db_config = {
    "host": app.config['MYSQL_HOST'],
    "user": app.config['MYSQL_USER'],
    "password": app.config['MYSQL_PASSWORD'],
    "database": app.config['MYSQL_DB'],
}

try:
    conn = mysql.connector.connect(**db_config)
    cursor = conn.cursor() #establishing a connection


except mysql.connector.Error as err:
    print(f"Error: {err}")

app.config['SECRET_KEY'] = '' #generated by os.random(24).hex() 

# Define a route for shutdown
@app.route('/shutdown', methods=['POST'])
def shutdown():
    print("Shutting down Flask application...")
    os.kill(os.getpid(), signal.SIGINT)  # Send SIGINT signal to gracefully stop the application
    return 'Flask application shutting down...'

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/create_template/', methods=['GET', 'POST'])
def create_template():

    if request.method == 'POST':
        template_name = request.form['template_name']
        template_description = request.form['template_description']
        email_id = request.form['email_id']

        if not template_name:
            flash("Title is required!")
        elif not template_description:
            flash("Description is required!")

        else:
            try:
                conn = mysql.connector.connect(**db_config)
                cursor = conn.cursor()
                query2 = f"INSERT INTO templates (template_title, template_desc, email_id) VALUES ('{template_name}', '{template_description}', '{email_id}')"
                cursor.execute(query2)
                query_to_create_table = "CREATE TABLE " + template_name +  " (Name varchar(255), Description varchar(255), subjCode char(1), startDate datetime, endDate datetime, Colour int, DayOrder int)"
                cursor.execute(query_to_create_table)

                conn.commit()
                return redirect(url_for('index'))
            
            except mysql.connector.Error as err:
                print(f"Error: {err}")

            finally:
                cursor.close()
                conn.close()

    return render_template('create_template.html')

if __name__ == "__main__":
    app.run(host='0.0.0.0')
    # Run Flask app using make_server to access the underlying server
    server = make_server('192.168.1.43', 5000, app)
    server.serve_forever()  # Start serving requests indefinitely